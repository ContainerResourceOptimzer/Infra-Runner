version: "3.8"

services:
  api:
    image: ${TEST_API_IMAGE}
    depends_on:
      - postgres
    env_file: .env
    deploy:
      resources:
        limits:
          cpus: "${CPU:-1.0}"
          memory: "${MEM:-1024M}"
        reservations:
          cpus: "0.5"
          memory: 512M
    networks:
      - default

  postgres:
    image: postgres
    # container_name: postgres-container
    env_file: .env
    # ports:
    #   - "${DB_PORT:-5432}:5432"
    volumes:
      # - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
      # 데이터는 Job마다 격리된 볼륨에 저장
      - "postgres_data:/var/lib/postgresql/data"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "1024M"
        reservations:
          cpus: "0.5"
          memory: 512M
    networks:
      - default

  k6:
    image: grafana/k6
    depends_on:
      - api
    volumes:
      - ./testharness/:/src
    entrypoint: ["sh", "-c"]
    command:
      - >
        k6 run -o experimental-prometheus-rw /src/k6_script.test2.js
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
      - HTTP_REQ_DURATION=${HTTP_REQ_DURATION:-3000}
      - HTTP_REQS=${HTTP_REQS:-1000}
      - JOB_ID=${JOB_ID}
      - EXP_ID=${EXP_ID}
    networks:
      - default
      - compose_monitor_net

networks:
  compose_monitor_net:
    external: true

volumes:
  postgres_data:
    name: "postgres_data_${JOB_ID:?JOB_ID_not_set}"
